% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/module_cache.r
\name{module_name}
\alias{module_name}
\title{Get a module’s name}
\usage{
module_name(module = parent.frame())
}
\arguments{
\item{module}{a module environment (default: current module)}
}
\value{
A character string containing the name of the module or \code{NULL}
 if called from outside a module.
}
\description{
Get a module’s name
}
\note{
A module’s name is the name of a module that it was \code{import}ed
with. If the same module is subsequently imported using another qualifie
name (from within the same package, say, and hence truncated), the module
names of the two module instances may differ, even though the same copy of
the byte code is used.
This function approximates Python’s magic variable \code{__name__}, and can
be used similarly to test whether a module was loaded via \code{import} or
invoked directly.
}
\examples{
\dontrun{
message('This code is always executed.\n')

if (is.null(module_name())) {
    message('This code is only executed when the module is run
             as stand-alone code via Rscript or R CMD BATCH.\n')
}
}
}
